{"version":3,"sources":["bus/weather/components/filter/initialValues.js","bus/weather/components/myTextInput/index.js","bus/weather/components/myRadio/index.js","bus/weather/components/filter/validationSchema.js","api/index.js","api/config.js","bus/weather/types.js","bus/weather/actions.js","bus/weather/components/filter/index.js","bus/weather/hooks/useFilter.js","bus/weather/hooks/useDaysData.js","bus/weather/components/dayWidget/index.js","bus/weather/components/day/index.js","bus/weather/components/forecast/index.js","elements/loader/index.js","bus/weather/index.js","bus/weather/hooks/useFetchDays.js","init/moment.js","bus/weather/reducer.js","init/rootReducer.js","init/middleware.js","init/store.js","serviceWorker.js","index.js","app.js","bus/weather/components/dayWidget/Styles.module.scss","bus/weather/components/myRadio/Styles.module.scss","bus/weather/components/day/Styles.module.scss","bus/weather/components/myTextInput/Styles.module.scss","bus/weather/components/forecast/Styles.module.scss","bus/weather/components/filter/Styles.module.scss","bus/weather/Styles.module.scss"],"names":["initialValues","Object","freeze","type","minTemp","maxTemp","MyTextInput","label","id","props","useField","field","meta","className","Styles","htmlFor","touched","error","MyRadio","radio","validationSchema","Yup","shape","integer","api","weather","fetch","a","async","method","response","status","Error","types","WEATHER_START_FETCHING","WEATHER_STOP_FETCHING","WEATHER_SET_FETCHING_ERROR","WEATHER_SELECT_DAY","WEATHER_FILL_DAYS","WEATHER_FILTER","weatherActions","startFetching","stopFetching","fill","payload","setFetchingError","selectDay","filter","fetchDays","dispatch","json","data","message","Filter","useDispatch","useState","filterData","setFilterData","useSelector","state","isFiltered","useEffect","filterDays","day","filterType","filterMinTemp","temperature","filterMaxTemp","getFilterData","values","loadData","useFilter","handleSubmit","btnTitle","isDisabled","onSubmit","name","value","disabled","useDaysData","selectedDayIdx","selectedDayData","days","slice","getDayId","DayWidget","humidity","rain_probability","dayTitle","moment","format","dayDescr","head","icon","rainy","Day","clickHandler","isActive","classCX","cx","selected","onClick","Forecast","listJSX","length","map","idx","key","shortid","generate","noDataJSX","nodata","forecast","Loader","Weather","isLoading","useFetchDays","spinnerJSX","contantJSX","main","locale","initialState","rootReducer","combineReducers","composeEnhancers","createLogger","duration","collapsed","colors","title","action","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.56e6e2b2.chunk.js","sourcesContent":["export const initialValues = Object.freeze({\n  type: \"cloudy\",\n  minTemp: \"\",\n  maxTemp: \"\",\n});\n","// Core\nimport React from \"react\";\nimport { useField } from \"formik\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const MyTextInput = ({ label, id, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className={Styles[\"custom-input\"]}>\n      <label htmlFor={id}>{label}</label>\n      <input id={id} {...field} {...props} />\n      {meta.touched && meta.error && <div className={Styles.error}>{meta.error}</div>}\n    </div>\n  );\n};\n","// Core\nimport React from \"react\";\nimport { useField } from \"formik\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const MyRadio = ({ label, ...props }) => {\n  const [field] = useField(props);\n\n  return (\n    <>\n      <label className={Styles.radio}>\n        {label}\n        <input className={Styles[\"radio__input\"]} {...field} {...props} />\n\t\t\t\t<span className={Styles[\"radio__box\"]}></span>\n      </label>\n    </>\n  );\n};\n","// Core\nimport * as Yup from \"yup\";\n\nexport const validationSchema = Yup.object().shape({\n  minTemp: Yup.number().integer(\"Дробное число недопустимо!\"),\n  maxTemp: Yup.number().integer(\"Дробное число недопустимо!\"),\n});\n","// Config\nimport { root } from \"./config\";\n\nexport const api = Object.freeze({\n  weather: {\n    fetch: async () => {\n      const response = await fetch(`${root}`, {\n        method: \"GET\",\n\t\t\t});\n\t\t\t\n      if (response.status >= 400 && response.status < 500) {\n        throw new Error(\"Client Error\");\n      } else if (response.status >= 500) {\n        throw new Error(\"Server Error\");\n      }\n      return response;\n    },\n  },\n});\n","export const root = 'https://lab.lectrum.io/rtx/api/forecast';","export const types = Object.freeze({\n  WEATHER_START_FETCHING: \"WEATHER_START_FETCHING\",\n  WEATHER_STOP_FETCHING: \"WEATHER_STOP_FETCHING\",\n  WEATHER_SET_FETCHING_ERROR: \"WEATHER_SET_FETCHING_ERROR\",\n  WEATHER_SELECT_DAY: \"WEATHER_SELECT_DAY\",\n  WEATHER_FILL_DAYS: \"WEATHER_FILL_DAYS\",\n  WEATHER_FILTER: \"WEATHER_FILTER\",\n});\n","// Api\nimport { api } from \"../../api/index\";\n\n// Types\nimport { types } from \"./types\";\n\nexport const weatherActions = Object.freeze({\n  startFetching: () => {\n    return {\n      type: types.WEATHER_START_FETCHING,\n    };\n  },\n  stopFetching: () => {\n    return {\n      type: types.WEATHER_STOP_FETCHING,\n    };\n  },\n  fill: (payload) => {\n    return {\n      type: types.WEATHER_FILL_DAYS,\n      payload,\n    };\n  },\n  setFetchingError: (error) => {\n    return {\n      type: types.WEATHER_SET_FETCHING_ERROR,\n      error: true,\n      payload: error,\n    };\n  },\n  selectDay: (payload) => {\n    return {\n      type: types.WEATHER_SELECT_DAY,\n      payload,\n    };\n  },\n  filter: (payload) => {\n    return {\n      type: types.WEATHER_FILTER,\n      payload,\n    };\n  },\n  // Async\n  fetchDays: () => async (dispatch) => {\n    dispatch(weatherActions.startFetching());\n\n    try {\n      const response = await api.weather.fetch();\n      const { data } = await response.json();\n      dispatch(weatherActions.fill(data));\n    } catch (err) {\n      const error = {\n        message: err.message,\n      };\n\n      dispatch(weatherActions.setFetchingError(error));\n    } finally {\n      dispatch(weatherActions.stopFetching());\n    }\n  },\n});\n","// Core\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\n// Initial values for out Form\nimport { initialValues } from \"./initialValues\";\n\n// Components\nimport { MyTextInput } from \"../myTextInput\";\nimport { MyRadio } from \"../myRadio\";\n\n// Schemas\nimport { validationSchema } from \"./validationSchema\";\n\n// Hooks\nimport { useFilter } from \"../../hooks/useFilter\";\n\nexport const Filter = () => {\n  const {getFilterData, isFiltered, loadData} = useFilter();\n\n  const handleSubmit = isFiltered ? loadData : getFilterData;\n  const btnTitle = isFiltered ? \"Сбросить\" : \"Отфильтровать\";\n  const isDisabled = isFiltered ? \"disabled\" : null;\n\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n      {() => {\n        return (\n          <Form className={Styles.filter}>\n            <MyRadio id=\"cloudy\" label=\"Облачно\" name=\"type\" type=\"radio\" value=\"cloudy\" disabled={isDisabled}/>\n            <MyRadio id=\"rainy\" label=\"Дождливо\" name=\"type\" type=\"radio\" value=\"rainy\" disabled={isDisabled}/>\n            <MyRadio id=\"sunny\" label=\"Солнечно\" name=\"type\" type=\"radio\" value=\"sunny\" disabled={isDisabled}/>\n            <MyTextInput\n              label=\"Минимальная температура\"\n              name=\"minTemp\"\n              type=\"number\"\n              id=\"min-temperature\"\n              disabled={isDisabled}\n            />\n            <MyTextInput\n              label=\"Максимальная температура\"\n              name=\"maxTemp\"\n              type=\"number\"\n              id=\"max-temperature\"\n              disabled={isDisabled}\n            />\n            <button type=\"submit\">{btnTitle}</button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n","// Core\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\n\n// Actions\nimport { weatherActions } from \"../actions\";\n\nexport const useFilter = () => {\n  const dispatch = useDispatch();\n  const [filterData, setFilterData] = useState(\"\");\n  const { data, isFiltered } = useSelector((state) => state.weather);\n\n  const getFilterData = (values) => {\n    setFilterData(values);\n  };\n\n  useEffect(() => {\n    if (data && filterData) {\n      const filterDays = data.filter((day) => {\n        const filterType = filterData.type === day.type;\n        const filterMinTemp = filterData.minTemp ? filterData.minTemp <= day.temperature : true;\n        const filterMaxTemp = filterData.maxTemp ? filterData.maxTemp >= day.temperature : true;\n\n        return filterType && filterMinTemp && filterMaxTemp;\n      });\n\n      dispatch(weatherActions.filter(filterDays));\n    }\n  }, [dispatch, filterData]);\n\n  const loadData = () => {\n    dispatch(weatherActions.fetchDays());\n  };\n\n  return {\n    getFilterData,\n    isFiltered,\n    loadData,\n  };\n};\n","// Core\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// Actions\nimport { weatherActions } from \"../actions\";\n\nexport const useDaysData = () => {\n  const dispatch = useDispatch();\n\n  const { data, selectedDayIdx, isFiltered } = useSelector((state) => state.weather);\n\n  const selectedDayData = data && data[selectedDayIdx];\n\n  const getDayId = (id) => {\n    dispatch(weatherActions.selectDay(id));\n  };\n  \n  const days = data && data.slice(0, 7);\n\n  return {\n    isFiltered,\n    days,\n    selectedDayIdx,\n    selectedDayData,\n    getDayId,\n  };\n};\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\n\n// Hooks\nimport { useDaysData } from \"../../hooks/useDaysData\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const DayWidget = () => {\n  const { selectedDayData } = useDaysData();\n\n  if (!selectedDayData) {\n    return null;\n  }\n  const { day, humidity, rain_probability, temperature, type } = selectedDayData;\n\n  const dayTitle = moment(day).format(\"dddd\");\n  const dayDescr = moment(day).format(\"D MMMM\");\n\n  return (\n    <>\n      <div className={Styles.head}>\n        <div className={`${Styles.icon} ${Styles[type]}`}></div>\n        <div className={Styles[\"current-date\"]}>\n          <p>{dayTitle}</p>\n          <span>{dayDescr}</span>\n        </div>\n      </div>\n      <div className={Styles[\"current-weather\"]}>\n        <p className={Styles.temperature}>{temperature}</p>\n        <p className={Styles.meta}>\n          <span className={Styles.rainy}>%{rain_probability}</span>\n          <span className={Styles.humidity}>%{humidity}</span>\n        </p>\n      </div>\n    </>\n  );\n};\n","// Core\nimport React from \"react\";\nimport moment from \"moment\";\nimport cx from \"classnames\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const Day = (props) => {\n  const { day, temperature, type, clickHandler, isActive } = props;\n\n  const dayTitle = moment(day).format(\"dddd\");\n  const classCX = cx(`${Styles.day}`, `${Styles[type]}`, {[`${Styles.selected}`]: isActive})\n  return (\n    <div className={classCX} onClick={clickHandler}>\n      <p>{dayTitle}</p>\n      <span>{temperature}</span>\n    </div>\n  );\n};\n","// Core\nimport React from \"react\";\nimport shortid from \"shortid\";\n\n// Hooks\nimport { useDaysData } from \"../../hooks/useDaysData\";\n\n// Componets\nimport { Day } from \"../day\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const Forecast = () => {\n  const { days, getDayId, selectedDayIdx, isFiltered } = useDaysData();\n\n  const listJSX =\n    days &&\n    days.length !== 0 &&\n    days.map(({ day, temperature, type }, idx) => {\n      const isActive = selectedDayIdx === idx ? true : false;\n      return (\n        <Day \n          key={shortid.generate()} \n          day={day} \n          temperature={temperature} \n          type={type} \n          isActive={isActive} \n          clickHandler={() => getDayId(idx)} \n          />\n        );\n    });\n\n  const noDataJSX = \n    isFiltered && \n    days && \n    days.length === 0 && \n    (\n      <div className={Styles.nodata}>\n        <h1>По заданным критериям нет доступных дней!</h1>\n      </div>\n    );\n\n  return (\n  <div className={Styles.forecast}>\n    {noDataJSX} \n    {listJSX}\n  </div>);\n};\n","// Core\nimport React from \"react\";\n\n// Styles\nimport \"./loader.scss\";\n\nexport const Loader = () => {\n  return (\n    <div className=\"loadingio-spinner-spinner-9x9vzlwnu96\">\n      <div className=\"ldio-jv0gqqj6m0c\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n","// Core\nimport React from \"react\";\n\n// Components\nimport { Filter } from \"./components/filter/index\";\nimport { DayWidget } from \"./components/dayWidget/index\";\nimport { Forecast } from \"./components/forecast/index\";\nimport { Loader } from \"../../elements/loader\";\n\n// Hooks\nimport { useFetchDays } from \"./hooks/useFetchDays\";\n\n// Styles\nimport Styles from \"./Styles.module.scss\";\n\nexport const Weather = () => {\n  const { error, isLoading } = useFetchDays();\n\n  if (error) {\n    return <h1>{error.message}</h1>;\n  }\n\n  const spinnerJSX = isLoading && <Loader />;\n  const contantJSX = !isLoading && (\n    <>\n      <Filter />\n      <DayWidget />\n      <Forecast />\n    </>\n  );\n\n  return (\n    <main className={Styles.main}>\n      {spinnerJSX}\n      {contantJSX}\n    </main>\n  );\n};\n","// Core\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\n// Actions\nimport { weatherActions } from \"../actions\";\n\nexport const useFetchDays = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(weatherActions.fetchDays());\n  }, [dispatch]);\n\n  const { error, isLoading } = useSelector((state) => state.weather);\n\n  return { error, isLoading };\n};\n","// Core\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\n\nmoment.locale(\"ru\");\n","// Types\nimport { types } from \"./types\";\n\nconst initialState = Object.freeze({\n  data: null,\n  isLoading: false,\n  error: null,\n  selectedDayIdx: 0,\n  isFiltered: false,\n});\n\nexport const weatherReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.WEATHER_START_FETCHING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case types.WEATHER_STOP_FETCHING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case types.WEATHER_FILL_DAYS:\n      return {\n        ...state,\n        error: null,\n        data: payload,\n        isFiltered: false,\n      };\n    case types.WEATHER_SET_FETCHING_ERROR:\n      return {\n        ...state,\n        error: true,\n        data: payload,\n        isFiltered: false,\n      };\n    case types.WEATHER_SELECT_DAY:\n      return {\n        ...state,\n        selectedDayIdx: payload,\n      };\n    case types.WEATHER_FILTER:\n      return {\n        ...state,\n        data: payload,\n        error: null,\n        isFiltered: true,\n      };\n    default:\n      return state;\n  }\n};\n","// Core\nimport { combineReducers } from \"redux\";\n\n// Reducers\nimport { weatherReducer as weather } from \"../bus/weather/reducer\";\n\nexport const rootReducer = combineReducers({\n  weather,\n});\n","// Core\nimport { compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nexport const logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: (action) => {\n      return action.error ? \"firebrick\" : \"deepskyblue\";\n    },\n    prevState: () => \"#1C5FAF\",\n    action: () => \"#149945\",\n    nextState: () => \"#A47104\",\n    error: () => \"#ff0005\",\n  },\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === \"development\";\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware = [thunk];\n\nif (developmentEnvironment) {\n  middleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// Core\nimport { createStore, applyMiddleware } from \"redux\";\n\n// Other\nimport { rootReducer } from \"./rootReducer\";\nimport { middleware, composeEnhancers } from \"./middleware\";\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","// Core\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\n\n// Components\nimport { Weather } from \"./bus/weather\";\n\n// Styles\nimport \"./styles/index.scss\";\n\n// Other\nimport \"./init/moment\";\nimport { store } from \"./init/store\";\n\nexport const App = () => {\n  return (\n    <Provider store={store}>\n      <Weather />\n    </Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Styles_head__3n6WR\",\"cloudy\":\"Styles_cloudy__2jeHY\",\"rainy\":\"Styles_rainy__GjQQo\",\"sunny\":\"Styles_sunny__2Z3-T\",\"icon\":\"Styles_icon__15zus\",\"current-date\":\"Styles_current-date__zZJlV\",\"current-weather\":\"Styles_current-weather__3lqrI\",\"temperature\":\"Styles_temperature__33_i-\",\"meta\":\"Styles_meta__3Yyy3\",\"humidity\":\"Styles_humidity__2LcSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"Styles_radio__3HIow\",\"radio__input\":\"Styles_radio__input__2mS8C\",\"radio__box\":\"Styles_radio__box__3Sr1R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day\":\"Styles_day__3IcPB\",\"selected\":\"Styles_selected__1YEIe\",\"cloudy\":\"Styles_cloudy__37Fa2\",\"rainy\":\"Styles_rainy__1pirN\",\"sunny\":\"Styles_sunny__2YOo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-input\":\"Styles_custom-input__1-ph1\",\"error\":\"Styles_error__2ywrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"Styles_forecast__1xidm\",\"btn-wrap\":\"Styles_btn-wrap__2QmOs\",\"showmore\":\"Styles_showmore__21igy\",\"nodata\":\"Styles_nodata__2Gw_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Styles_filter__xwshQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Styles_main__3NFfL\"};"],"sourceRoot":""}